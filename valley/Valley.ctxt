#BlueJ class context
comment0.target=Valley
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Valley\ here.\r\n\ \r\n\ @author\ (David\ Otalora\ -\ Davor\ Cortez)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=width\ height
comment1.target=Valley(int,\ int)
comment1.text=\r\n\ Constructor\ de\ los\ objetos\ de\ Valley\r\n
comment10.params=
comment10.target=void\ draw()
comment11.params=position
comment11.target=void\ water(int)
comment12.params=
comment12.target=int\ getHeight()
comment13.params=
comment13.target=java.util.ArrayList\ getTraps()
comment13.text=\r\n\ \r\n
comment14.params=
comment14.target=java.util.ArrayList\ getVineyards()
comment15.params=
comment15.target=void\ makeInvisible()
comment15.text=\r\n\ Hace\ invisible\ todo\ el\ simulador\r\n
comment16.params=
comment16.target=void\ finish()
comment16.text=\r\n\ \r\n
comment17.params=
comment17.target=boolean\ ok()
comment17.text=\r\n\ Verifica\ que\ la\ ultima\ accion\ se\ halla\ realizado\ correctamente\r\n\ @return\ si\ salio\ bien\ o\ no\r\n
comment2.params=name\ xi\ xf
comment2.target=void\ openVineyard(java.lang.String,\ int,\ int)
comment2.text=\r\n\ Crea\ un\ vi\u00F1edo\ en\ una\ posicion\ x\ dada\r\n\ @param\ name\ es\ el\ nombre\ del\ vi\u00F1edo,\ xi\ la\ posicion\ inicial\ x,\ xf\ la\ posicion\ final\ en\ x\ \r\n
comment3.params=name
comment3.target=void\ closeVineyard(java.lang.String)
comment3.text=\r\n\ Dado\ el\ nombre\ del\ vi\u00F1edo,\ lo\ borra\r\n\ @param\ name\ es\ el\ nombre\ del\ vi\u00F1edo\r\n
comment4.params=name\ xi\ xf
comment4.target=boolean\ noEsPosible(java.lang.String,\ int,\ int)
comment4.text=\r\n\ Verifica\ que\ 2\ vi\u00F1edos\ no\ tengan\ el\ mismo\ nombre\ ni\ se\ cruzen\r\n\ @param\ name\ el\ nombre\ del\ vi\u00F1edo,\ xi\ la\ posicion\ inicial\ x,\ xf\ la\ posicion\ final\ en\ x\ \r\n
comment5.params=lowerEnd\ higherEnd
comment5.target=void\ addTrap(int[],\ int[])
comment5.text=\r\n\ Agrega\ una\ lona\ en\ el\ valle\ con\ respecto\ a\ sus\ puntos\r\n\ @param\ lowerEnd\ son\ los\ puntos\ mas\ bajos\ de\ la\ lona,\ higherEnd\ son\ los\ puntos\ mas\ altos\ de\ la\ lona\r\n
comment6.params=position
comment6.target=void\ removeTrap(int)
comment6.text=\r\n\ Elimina\ una\ lona\ \r\n\ @param\ position\ que\ es\ la\ posicion\ de\ la\ lista\ de\ lonas\r\n
comment7.params=trap\ x
comment7.target=void\ makePuncture(int,\ int)
comment7.text=\r\n\ Agrega\ un\ hueco\ en\ una\ lona\r\n\ @param\ trap\ es\ la\ ubicacion\ de\ la\ lona\ en\ la\ lista,\ x\ la\ posicion\ de\ la\ misma\r\n
comment8.params=trap\ x
comment8.target=void\ patchPuncture(int,\ int)
comment9.params=
comment9.target=void\ makeVisible()
comment9.text=\r\n\ Empieza\ a\ caer\ la\ lluvia\r\n\ @param\ x\ represeta\ la\ posicion\ en\ donde\ empieza\ la\ lluvia\r\n
numComments=18
